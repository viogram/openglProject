#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexcoords;

out VS_OUT{
    vec3 worldPos;
    vec3 worldNormal;
    vec2 texCoords;
    vec4 worldPosLightSpace;
} vs_out;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 lightVP;

void main()
{
   gl_Position = projection*view*model*vec4(aPos, 1.0);
   vs_out.worldPos = vec3(model*vec4(aPos, 1.0));
   vs_out.worldNormal = transpose(inverse(mat3(model)))*aNormal;
   vs_out.texCoords = aTexcoords;
   vs_out.worldPosLightSpace = lightVP*vec4(vs_out.worldPos, 1.0);
}