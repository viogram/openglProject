#version 330 core
in VS_OUT{
    vec3 worldPos;
    vec2 texCoords;
    vec3 tangentLightPos;
    vec3 tangentViewPos;
    vec3 tangentPos;    
} fs_in;

out vec4 FragColor;

uniform sampler2D diffuseMap;
uniform sampler2D normalMap;
uniform sampler2D depthMap;

const float height_scale=1.0;

vec2 ParallaxMapping(vec2 texCoords, vec3 viewDir){
    float height = texture(depthMap,texCoords).r;
    vec2 offset = viewDir.xy/viewDir.z * height * height_scale;
    return texCoords-offset;
}

void main()
{
    vec3 viewDir = normalize(fs_in.tangentViewPos - fs_in.tangentPos);
    vec2 texCoords = ParallaxMapping(fs_in.texCoords, viewDir);

    vec3 color = texture(diffuseMap, texCoords).rgb;
    vec3 normal = texture(normalMap, texCoords).rgb;
    normal = normalize(normal*2.0-1.0);
    
    vec3 lightDir = normalize(fs_in.tangentLightPos - fs_in.tangentPos);
    vec3 diffuse = color*max(0,dot(normal, lightDir));
    
    vec3 halfDir = normalize(viewDir+lightDir);
    vec3 specular = vec3(0.2)*pow(max(0,dot(normal, halfDir)), 32);

    vec3 ambient = color*0.1;
FragColor = vec4(diffuse, 1.0);
    //FragColor = vec4(ambient+diffuse+specular, 1.0);
}